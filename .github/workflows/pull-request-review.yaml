name: Review handler


on:
  pull_request_review:
    types:
      - submitted
      - edited
      - dismissed
    branches:
      - "exception-request/*"


concurrency:
  group: ${{ github.workflow }}-review-${{ github.event.pull_request.head.ref }}
  cancel-in-progress: true


jobs:
  run_update:
    name: Run controller in update mode

    runs-on: ubuntu-latest

    if: ${{ github.event.pull_request.base.ref == 'exceptions' }}

    steps:
      - name: Parse pull request details
        run: |
          HEAD_REF=${{ github.event.pull_request.head.ref }}

          echo "HEAD_REF=$HEAD_REF" | tee -a "$GITHUB_ENV"

          TARGET=${HEAD_REF#*/}
          TARGET_REPOSITORY=${TARGET%/*}
          TARGET_PULL_REQUEST=${HEAD_REF##*/}

          echo "TARGET_REPOSITORY=$TARGET_REPOSITORY" | tee -a "$GITHUB_ENV"
          echo "TARGET_PULL_REQUEST=$TARGET_PULL_REQUEST" | tee -a "$GITHUB_ENV"

      - name: Checkout commit
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3'
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install -r controller/requirements.txt

      - name: Run update script
        env:
          REPOSITORY: ${{ github.repository }}
          APP_ID: ${{ secrets.APP_ID }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        run: |
          ./controller/run.py \
            --app-id "$APP_ID" \
            --private-key "$PRIVATE_KEY" \
            --controller-repository "${{ env.REPOSITORY }}" \
            update \
            --repository "${{ env.TARGET_REPOSITORY }}" \
            --pull-request "${{ env.TARGET_PULL_REQUEST }}"

