name: 'Triggering Artikodin Controller'
description: 'Triggering the Artikodin controller to update pull request status'


inputs:
  contents-app-id:
    description: "GitHub app ID for access to contents repositories"
    required: true

  contents-private-key:
    description: "GitHub app private key for access to contents repositories"
    required: true

  controller-app-id:
    description: "GitHub app ID for access to controller repositories"
    required: true

  controller-private-key:
    description: "GitHub app private key for access to controller repositories"
    required: true

  target-from-head-ref:
    description: "Parse the specified head ref to get the repository and pull request number"

  target-repository:
    description: "The target repository"

  exception-pull-request:
    description: "The number of the exception request pull request for which to request the exception"

  target-pull-request:
    description: "The number of the pull request for which to request the exception (contents repository)"

  target-git-sha:
    description: "The sha of the commit to update the status for"

  request-exception:
    description: "Request an exception for merge"
    type: boolean
    default: false

  closing-pr:
    description: "Set to true when pull requests are getting closed"
    type: boolean
    default: true


runs:
  using: "composite"
  steps:
    - name: Prepare inputs
      shell: bash
      run: |
        HEAD_REF="${{ inputs.target-from-head-ref }}"
        if [[ "$HEAD_REF" =~ ([^/]*)/([^/]*)/([0-9]*)$ ]]; then
          TARGET_REPOSITORY_OWNER=${BASH_REMATCH[1]}
          TARGET_REPOSITORY_NAME=${BASH_REMATCH[2]}
          TARGET_REPOSITORY="${TARGET_REPOSITORY_OWNER}/${TARGET_REPOSITORY_NAME}"
          TARGET_PULL_REQUEST=${BASH_REMATCH[3]}
        else
          TARGET_REPOSITORY="${{ inputs.target-repository || github.repository }}"
          TARGET_PULL_REQUEST="${{ inputs.target-pull-request }}"
        fi
        echo "TARGET_REPOSITORY=$TARGET_REPOSITORY" | tee -a "$GITHUB_ENV"
        echo "TARGET_PULL_REQUEST=$TARGET_PULL_REQUEST" | tee -a "$GITHUB_ENV"

    - name: Checkout controller repository
      uses: actions/checkout@v4
      with:
        repository: ${{ github.action_repository }}
        ref: main

    - name: Setup python
      uses: actions/setup-python@v4
      with:
        python-version: '3'
        cache: 'pip'

    - name: Install dependencies
      shell: bash
      run: |
        pip install -r controller/requirements.txt

    - name: Run update script
      shell: bash
      env:
        ARTIKODIN_CONTROLLER_APP_ID: ${{ inputs.controller-app-id }}
        ARTIKODIN_CONTROLLER_PRIVATE_KEY: ${{ inputs.controller-private-key }}
        ARTIKODIN_CONTENTS_APP_ID: ${{ inputs.contents-app-id }}
        ARTIKODIN_CONTENTS_PRIVATE_KEY: ${{ inputs.contents-private-key }}
        TARGET_GIT_SHA: ${{ inputs.target-git-sha }}
        EXCEPTION_PULL_REQUEST: ${{ inputs.exception-pull-request }}
        VERB: ${{ inputs.request-exception == 'true' && 'request' || 'update' }}
        BEST_EFFORT: ${{ inputs.request-exception == 'false' && inputs.closing-pr == 'true' && '--best-effort' || '' }}
      run: |
        ./controller/run.py \
          --controller-app-id "$ARTIKODIN_CONTROLLER_APP_ID" \
          --controller-private-key "$ARTIKODIN_CONTROLLER_PRIVATE_KEY" \
          --contents-app-id "$ARTIKODIN_CONTENTS_APP_ID" \
          --contents-private-key "$ARTIKODIN_CONTENTS_PRIVATE_KEY" \
          ${{ env.VERB }} ${{ env.BEST_EFFORT }} \
          ${TARGET_PULL_REQUEST:+--pull-request $TARGET_PULL_REQUEST} \
          ${TARGET_GIT_SHA:+--commit $TARGET_GIT_SHA} \
          ${EXCEPTION_PULL_REQUEST:+--exception-pull-request $EXCEPTION_PULL_REQUEST} \
          --repository "${{ env.TARGET_REPOSITORY }}"
